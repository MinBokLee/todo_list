{"version":3,"sources":["app-config.js","Todo.js","AddTodo.js","service/ApiService.js","App.js","Login.js","SignUp.js","AppRouter.js","reportWebVitals.js","index.js"],"names":["backendHost","Todo","props","deleteEventHandler","delete","state","item","offReadOnlyMode","console","log","readOnly","setState","enterKeyEventHandler","e","key","update","editEventHandler","thisItem","title","target","value","checkboxEventHandler","done","this","ListItem","Checkbox","checked","onChange","ListItemText","InputBase","inputProps","type","id","name","fullWidth","onClick","onKeyPress","ListItemSecondaryAction","IconButton","aria-label","React","Component","AddTodo","onInputChange","onButtonClick","add","Paper","style","margin","padding","Grid","container","xs","md","paddingRight","TextField","placeholder","Button","color","variant","window","location","hostname","API_BASE_URL","ACCESS_TOKEN","call","api","method","request","headers","Headers","accessToken","localStorage","getItem","append","url","options","body","JSON","stringify","fetch","then","response","json","ok","Promise","reject","catch","error","status","href","signout","setItem","App","items","data","err","loading","todoItems","length","List","map","idx","navigationBar","AppBar","position","Toolbar","justify","Typography","todoListPage","Container","maxWidth","className","content","Login","handleSubmit","bind","event","preventDefault","FormData","email","get","password","token","component","marginTop","spacing","noValidate","onSubmit","required","label","autoComplete","Link","SignUp","userDTO","username","autoFocus","Copyright","align","Date","getFullYear","AppRouter","path","Box","mt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a9162d9.chunk.js","sourcesContent":["let backendHost;\n\nconst hostname = window && window.location && window.location.hostname;\n\nif (hostname === \"localhost\") {\n  backendHost = \"http://localhost:8080\";\n}\n\nexport const API_BASE_URL = `${backendHost}`;\n","import React from \"react\";\nimport {\n  ListItem,\n  ListItemText,\n  InputBase,\n  Checkbox,\n  ListItemSecondaryAction,\n  IconButton,\n} from \"@material-ui/core\";\n\nimport DeleteOutlined from \"@material-ui/icons/DeleteOutlined\";\n\nclass Todo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { item: props.item, readOnly: true };\n    this.delete = props.delete;\n    this.update = props.update;\n  }\n\n  deleteEventHandler = () => {\n    this.delete(this.state.item);\n  };\n\n  offReadOnlyMode = () => {\n    console.log(\"Event!\", this.state.readOnly);\n    this.setState({ readOnly: false }, () => {\n      console.log(\"ReadOnly? \", this.state.readOnly);\n    });\n  };\n\n  enterKeyEventHandler = (e) => {\n    if (e.key === \"Enter\") {\n      this.setState({ readOnly: true });\n      this.update(this.state.item);\n    }\n  };\n\n  editEventHandler = (e) => {\n    const thisItem = this.state.item;\n    thisItem.title = e.target.value;\n    this.setState({ item: thisItem });\n  };\n\n  checkboxEventHandler = (e) => {\n    const thisItem = this.state.item;\n    thisItem.done = !thisItem.done;\n    this.setState({ item: thisItem });\n    this.update(this.state.item);\n  };\n\n  render() {\n    const item = this.state.item;\n    return (\n      <ListItem>\n        <Checkbox checked={item.done} onChange={this.checkboxEventHandler} />\n        <ListItemText>\n          <InputBase\n            inputProps={{\n              \"aria-label\": \"naked\",\n              readOnly: this.state.readOnly,\n            }}\n            type=\"text\"\n            id={item.id}\n            name={item.id}\n            value={item.title}\n            fullWidth={true}\n            onClick={this.offReadOnlyMode}\n            onChange={this.editEventHandler}\n            onKeyPress={this.enterKeyEventHandler}\n          />\n        </ListItemText>\n\n        <ListItemSecondaryAction>\n          <IconButton\n            aria-label=\"Delete Todo\"\n            onClick={this.deleteEventHandler}\n          >\n            <DeleteOutlined />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    );\n  }\n}\n\nexport default Todo;\n","import React from \"react\";\nimport { TextField, Paper, Button, Grid } from \"@material-ui/core\";\n\nclass AddTodo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { item: { title: \"\" } };\n    this.add = props.add;\n  }\n\n  onInputChange = (e) => {\n    const thisItem = this.state.item;\n    thisItem.title = e.target.value;\n    this.setState({ item: thisItem });\n    console.log(thisItem);\n  };\n\n  onButtonClick = () => {\n    this.add(this.state.item);\n    this.setState({ item: { title: \"\" } });\n  };\n\n  enterKeyEventHandler = (e) => {\n    if (e.key === \"Enter\") {\n      this.onButtonClick();\n    }\n  };\n\n  render() {\n    return (\n      <Paper style={{ margin: 16, padding: 16 }}>\n        <Grid container>\n          <Grid xs={11} md={11} item style={{ paddingRight: 16 }}>\n            <TextField\n              placeholder=\"Add Todo here\"\n              fullWidth\n              onChange={this.onInputChange}\n              value={this.state.item.title}\n              onKeyPress={this.enterKeyEventHandler}\n            />\n          </Grid>\n          <Grid xs={1} md={1} item>\n            <Button\n              fullWidth\n              color=\"secondary\"\n              variant=\"outlined\"\n              onClick={this.onButtonClick}\n            >\n              +\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default AddTodo;\n","import { API_BASE_URL } from \"../app-config\";\nconst ACCESS_TOKEN = \"ACCESS_TOKEN\";\n\nexport function call(api, method, request) {\n  let headers = new Headers({\n    \"Content-Type\": \"application/json\",\n  });\n\n  // 로컬 스토리지에서 ACCESS TOKEN 가져오기\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n  if (accessToken && accessToken !== null) {\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\n  }\n\nlet url = {\n      url: API_BASE_URL + api\n}\n\n  let options = {\n    headers: headers,\n    method: method,\n  };\n\n  if (request) {\n    // GET method\n    options.body = JSON.stringify(request);\n  }\n  return fetch(url.url, options)\n    .then((response) =>\n      response.json().then((json) => {\n        if (!response.ok) {\n          // response.ok가 true이면 정상적인 리스폰스를 받은것, 아니면 에러 리스폰스를 받은것.\n          return Promise.reject(json);\n        }\n        return json;\n      })\n    )\n    .catch((error) => {\n      // 추가된 부분\n      console.log(error.status);\n      if (error.status === 403) {\n        window.location.href = \"/login\"; // redirect\n      }\n      return Promise.reject(error);\n    });\n}\n\nexport function signin(userDTO) {\n  return call(\"/auth/signin\", \"POST\", userDTO).then((response) => {\n    if (response.token) {\n      // 로컬 스토리지에 토큰 저장\n      localStorage.setItem(ACCESS_TOKEN, response.token);\n      // token이 존재하는 경우 Todo 화면으로 리디렉트\n      window.location.href = \"/\";\n    }\n  });\n}\n\nexport function signout() {\n  localStorage.setItem(ACCESS_TOKEN, null);\n  window.location.href = \"/login\";\n}\n\nexport function signup(userDTO) {\n  return call(\"/auth/signup\", \"POST\", userDTO);\n}\n","import React from \"react\";\nimport Todo from \"./Todo\";\nimport AddTodo from \"./AddTodo.js\";\nimport \"./App.css\";\nimport {\n  Paper,\n  List,\n  Container,\n  Grid,\n  Button,\n  AppBar,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { call, signout } from \"./service/ApiService\"; // signout 추가\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      /* 1. 로딩중이라는 상태이다. 생성자에 상태 변수를 추가한다. */\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    /* 2. componentDidMount에서 todo리스트를 가져오는 \n    GET 리퀘스트가 성공적으로 리턴하는 경우 loading을 false로 고친다. \n    더 이상 로딩중이 아니라는 뜻이다. */\n    call(\"/todo\", \"GET\").then((response) =>\n    {console.log(response)\n      this.setState({ items: response.data, loading: false })}\n    );\n  }\n\n  add = (item) => {\n    call(\"/todo\", \"POST\", item).then((response) =>\n    { console.log(response)\n      this.setState({ items: response.data })}\n    )\n    .catch(err => console.log(err))\n  };\n\n  delete = (item) => {\n    call(\"/todo\", \"DELETE\", item).then((response) =>\n      this.setState({ items: response.data })\n    );\n  };\n\n  update = (item) => {\n    call(\"/todo\", \"PUT\", item).then((response) =>\n      this.setState({ items: response.data })\n    );\n  };\n\n  render() {\n    var todoItems = this.state.items.length > 0 && (\n      <Paper style={{ margin: 16 }}>\n        <List>\n          {this.state.items.map((item, idx) => (\n            <Todo\n              item={item}\n              key={item.id}\n              delete={this.delete}\n              update={this.update}\n            />\n          ))}\n        </List>\n      </Paper>\n    );\n\n    // navigationBar 추가\n    var navigationBar = (\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Grid justify=\"space-between\" container>\n            <Grid item>\n              <Typography variant=\"h6\">오늘의 할일</Typography>\n            </Grid>\n            <Grid>\n              <Button color=\"inherit\" onClick={signout}>\n                로그아웃\n              </Button>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    );\n\n    /* 로딩중이 아닐 때 렌더링 할 부분 */\n    var todoListPage = (\n      <div>\n        {navigationBar} {/* 네비게이션 바 렌더링 */}\n        <Container maxWidth=\"md\">\n          <AddTodo add={this.add} />\n          <div className=\"TodoList\">{todoItems}</div>\n        </Container>\n      </div>\n    );\n\n    /* 로딩중일 때 렌더링 할 부분 */\n    var loadingPage = <h1> 로딩중.. </h1>;\n\n    var content = loadingPage;\n\n    if (!this.state.loading) {\n      /* 로딩중이 아니면 todoListPage를 선택*/\n      content = todoListPage;\n    }\n\n    /* 선택한 content 렌더링 */\n    return <div className=\"App\">{content}</div>;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { signin } from \"./service/ApiService\";\nimport {\n  Link,\n  Button,\n  TextField,\n  Grid,\n  Container,\n  Typography,\n} from \"@material-ui/core\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    const email = data.get(\"email\");\n    const password = data.get(\"password\");\n    // ApiService의 signin 메서드를 사용 해 로그인.\n    signin({ email: email, password: password });\n  }\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\" style={{ marginTop: \"8%\" }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Typography component=\"h1\" variant=\"h5\">\n              로그인\n            </Typography>\n          </Grid>\n        </Grid>\n        <form noValidate onSubmit={this.handleSubmit}>\n          {\" \"}\n          {/* submit 버튼을 누르면 handleSubmit이 실행됨. */}\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"이메일 주소\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"패스워드\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                로그인\n              </Button>\n            </Grid>\n            <Link href=\"/signup\" variant=\"body2\">\n              <Grid item>계정이 없습니까? 여기서 가입 하세요.</Grid>\n            </Link>\n          </Grid>\n        </form>\n      </Container>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport {\n  Button,\n  TextField,\n  Link,\n  Grid,\n  Container,\n  Typography,\n} from \"@material-ui/core\";\nimport { signup } from \"./service/ApiService\";\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    // 오브젝트에서 form에 저장된 데이터를 맵의 형태로 바꿔줌.\n    const data = new FormData(event.target);\n    const username = data.get(\"username\");\n    const email = data.get(\"email\");\n    const password = data.get(\"password\");\n    signup({ email: email, username: username, password: password }).then(\n      (response) => {\n        // 계정 생성 성공 시 login페이지로 리디렉트\n        window.location.href = \"/login\";\n      }\n    );\n  }\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\" style={{ marginTop: \"8%\" }}>\n        <form noValidate onSubmit={this.handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography component=\"h1\" variant=\"h5\">\n                계정 생성\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"username\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"유저 이름\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"이메일 주소\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"패스워드\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                계정 생성\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                이미 계정이 있습니까? 로그인 하세요.\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </Container>\n    );\n  }\n}\n\nexport default SignUp;\n","import React from \"react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Login from \"./Login\";\nimport SignUp from \"./SignUp\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      fsoftwareengineer, {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nclass AppRouter extends React.Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            <Switch>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <Route path=\"/signup\">\n                <SignUp />\n              </Route>\n              <Route path=\"/\">\n                <App />\n              </Route>\n            </Switch>\n          </div>\n          <Box mt={5}>\n            <Copyright />\n          </Box>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default AppRouter;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppRouter from \"./AppRouter\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppRouter />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}